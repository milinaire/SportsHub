// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SportsHubDAL.Data;

namespace SportsHubDAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210326150010_added_AllSurveys_Banners_Footer")]
    partial class added_AllSurveys_Banners_Footer
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.DeviceFlowCodes", b =>
                {
                    b.Property<string>("UserCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasMaxLength(50000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DeviceCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("Expiration")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("SessionId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SubjectId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("UserCode");

                    b.HasIndex("DeviceCode")
                        .IsUnique();

                    b.HasIndex("Expiration");

                    b.ToTable("DeviceCodes");
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.PersistedGrant", b =>
                {
                    b.Property<string>("Key")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ConsumedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasMaxLength(50000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("Expiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("SessionId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SubjectId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Key");

                    b.HasIndex("Expiration");

                    b.HasIndex("SubjectId", "ClientId", "Type");

                    b.HasIndex("SubjectId", "SessionId", "Type");

                    b.ToTable("PersistedGrants");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("SportsHubDAL.Entities.AboutSportHubTranslation", b =>
                {
                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<int?>("CompanyInfoSectionsId")
                        .HasColumnType("int");

                    b.Property<string>("Headline")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.HasKey("SectionId", "LanguageId");

                    b.HasIndex("CompanyInfoSectionsId");

                    b.HasIndex("LanguageId");

                    b.ToTable("AboutSportHubTranslations");
                });

            modelBuilder.Entity("SportsHubDAL.Entities.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("SportsHubDAL.Entities.Banner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ImageId")
                        .HasColumnType("int");

                    b.Property<bool>("IsClosed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.ToTable("Banners");
                });

            modelBuilder.Entity("SportsHubDAL.Entities.BannerLocalization", b =>
                {
                    b.Property<int>("BannerId")
                        .HasColumnType("int");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Headline")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BannerId", "LanguageId");

                    b.HasIndex("LanguageId");

                    b.ToTable("BannerLocalizations");
                });

            modelBuilder.Entity("SportsHubDAL.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsEditable")
                        .HasColumnType("bit");

                    b.Property<bool>("Show")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("SportsHubDAL.Entities.CompanyInfoSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Show")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("CompanyInfoSections");
                });

            modelBuilder.Entity("SportsHubDAL.Entities.CompanyInfoTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.ToTable("CompanyInfoTranslations");
                });

            modelBuilder.Entity("SportsHubDAL.Entities.Conference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<bool>("Show")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Conferences");
                });

            modelBuilder.Entity("SportsHubDAL.Entities.ContactUsTranslation", b =>
                {
                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CompanyInfoSectionsId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Headline")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SectionId", "LanguageId");

                    b.HasIndex("CompanyInfoSectionsId");

                    b.HasIndex("LanguageId");

                    b.ToTable("ContactUsTranslations");
                });

            modelBuilder.Entity("SportsHubDAL.Entities.ContributorsSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Show")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("ContributorsSections");
                });

            modelBuilder.Entity("SportsHubDAL.Entities.ContributorsSectionsTranslation", b =>
                {
                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<int?>("ContributorsSectionId")
                        .HasColumnType("int");

                    b.Property<string>("Headline")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.HasKey("SectionId", "LanguageId");

                    b.HasIndex("ContributorsSectionId");

                    b.HasIndex("LanguageId");

                    b.ToTable("ContributorsSectionsTranslations");
                });

            modelBuilder.Entity("SportsHubDAL.Entities.ContributorsTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.ToTable("ContributorsTranslations");
                });

            modelBuilder.Entity("SportsHubDAL.Entities.DeletableInfoSectionsTranslation", b =>
                {
                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<int?>("CompanyInfoSectionsId")
                        .HasColumnType("int");

                    b.Property<string>("Headline")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.HasKey("SectionId", "LanguageId");

                    b.HasIndex("CompanyInfoSectionsId");

                    b.HasIndex("LanguageId");

                    b.ToTable("DeletableInfoSectionsTranslations");
                });

            modelBuilder.Entity("SportsHubDAL.Entities.Footer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ShowCompanyInfo")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowContributors")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowNewsletter")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowNewsletterDescription")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Footers");
                });

            modelBuilder.Entity("SportsHubDAL.Entities.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Uri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("SportsHubDAL.Entities.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("language")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("SportsHubDAL.Entities.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Uri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("SportsHubDAL.Entities.NewsLetterTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.ToTable("NewsLetterTranslations");
                });

            modelBuilder.Entity("SportsHubDAL.Entities.PredefinedBanner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ImageId")
                        .HasColumnType("int");

                    b.Property<bool>("Show")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.ToTable("PredefinedBanners");
                });

            modelBuilder.Entity("SportsHubDAL.Entities.PredefinedBannerLocalization", b =>
                {
                    b.Property<int>("PredefinedBannerId")
                        .HasColumnType("int");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Headline")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PredefinedBannerId", "LanguageId");

                    b.HasIndex("LanguageId");

                    b.ToTable("PredefinedBannerLocalizations");
                });

            modelBuilder.Entity("SportsHubDAL.Entities.Privacy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Headline")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.ToTable("Privacies");
                });

            modelBuilder.Entity("SportsHubDAL.Entities.Survey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsClosed")
                        .HasColumnType("bit");

                    b.Property<bool>("Ispublished")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Surveys");
                });

            modelBuilder.Entity("SportsHubDAL.Entities.SurveyLocalization", b =>
                {
                    b.Property<int>("SurveyId")
                        .HasColumnType("int");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Headline")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SurveyId", "LanguageId");

                    b.HasIndex("LanguageId");

                    b.ToTable("SurveyLocalizations");
                });

            modelBuilder.Entity("SportsHubDAL.Entities.SurveyOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("SurveyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SurveyId");

                    b.ToTable("SurveyOptions");
                });

            modelBuilder.Entity("SportsHubDAL.Entities.SurveyOptionLocalization", b =>
                {
                    b.Property<int>("SurveyOptionId")
                        .HasColumnType("int");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Option")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SurveyOptionId", "LanguageId");

                    b.HasIndex("LanguageId");

                    b.ToTable("SurveyOptionLocalizations");
                });

            modelBuilder.Entity("SportsHubDAL.Entities.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ConferenceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ImageId")
                        .HasColumnType("int");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int");

                    b.Property<bool>("Show")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ConferenceId");

                    b.HasIndex("ImageId");

                    b.HasIndex("LocationId");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("SportsHubDAL.Entities.Term", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Headline")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.ToTable("Terms");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("SportsHubDAL.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("SportsHubDAL.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SportsHubDAL.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("SportsHubDAL.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SportsHubDAL.Entities.AboutSportHubTranslation", b =>
                {
                    b.HasOne("SportsHubDAL.Entities.CompanyInfoSection", "CompanyInfoSections")
                        .WithMany("AboutSportHubTranslations")
                        .HasForeignKey("CompanyInfoSectionsId");

                    b.HasOne("SportsHubDAL.Entities.Language", "Language")
                        .WithMany("AboutSportHubTranslations")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyInfoSections");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("SportsHubDAL.Entities.Banner", b =>
                {
                    b.HasOne("SportsHubDAL.Entities.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId");

                    b.Navigation("Image");
                });

            modelBuilder.Entity("SportsHubDAL.Entities.BannerLocalization", b =>
                {
                    b.HasOne("SportsHubDAL.Entities.Banner", "Banner")
                        .WithMany("BannerLocalizations")
                        .HasForeignKey("BannerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SportsHubDAL.Entities.Language", "Language")
                        .WithMany("BannerLocalizations")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Banner");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("SportsHubDAL.Entities.CompanyInfoTranslation", b =>
                {
                    b.HasOne("SportsHubDAL.Entities.Language", "Language")
                        .WithMany("CompanyInfoTranslations")
                        .HasForeignKey("LanguageId");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("SportsHubDAL.Entities.Conference", b =>
                {
                    b.HasOne("SportsHubDAL.Entities.Category", "Category")
                        .WithMany("Conferences")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("SportsHubDAL.Entities.ContactUsTranslation", b =>
                {
                    b.HasOne("SportsHubDAL.Entities.CompanyInfoSection", "CompanyInfoSections")
                        .WithMany("ContactUsTranslations")
                        .HasForeignKey("CompanyInfoSectionsId");

                    b.HasOne("SportsHubDAL.Entities.Language", "Language")
                        .WithMany("ContactUsTranslations")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyInfoSections");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("SportsHubDAL.Entities.ContributorsSectionsTranslation", b =>
                {
                    b.HasOne("SportsHubDAL.Entities.ContributorsSection", "ContributorsSection")
                        .WithMany("ContributorsSectionsTranslations")
                        .HasForeignKey("ContributorsSectionId");

                    b.HasOne("SportsHubDAL.Entities.Language", "Language")
                        .WithMany("ContributorsSectionsTranslations")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContributorsSection");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("SportsHubDAL.Entities.ContributorsTranslation", b =>
                {
                    b.HasOne("SportsHubDAL.Entities.Language", "Language")
                        .WithMany("ContributorsTranslations")
                        .HasForeignKey("LanguageId");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("SportsHubDAL.Entities.DeletableInfoSectionsTranslation", b =>
                {
                    b.HasOne("SportsHubDAL.Entities.CompanyInfoSection", "CompanyInfoSections")
                        .WithMany("DeletableInfoSectionsTranslations")
                        .HasForeignKey("CompanyInfoSectionsId");

                    b.HasOne("SportsHubDAL.Entities.Language", "Language")
                        .WithMany("DeletableInfoSectionsTranslations")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyInfoSections");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("SportsHubDAL.Entities.NewsLetterTranslation", b =>
                {
                    b.HasOne("SportsHubDAL.Entities.Language", "Language")
                        .WithMany("NewsLetterTranslations")
                        .HasForeignKey("LanguageId");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("SportsHubDAL.Entities.PredefinedBanner", b =>
                {
                    b.HasOne("SportsHubDAL.Entities.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId");

                    b.Navigation("Image");
                });

            modelBuilder.Entity("SportsHubDAL.Entities.PredefinedBannerLocalization", b =>
                {
                    b.HasOne("SportsHubDAL.Entities.Language", "Language")
                        .WithMany("PredefinedBannerLocalization")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SportsHubDAL.Entities.PredefinedBanner", "PredefinedBanner")
                        .WithMany("PredefinedBannerLocalization")
                        .HasForeignKey("PredefinedBannerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("PredefinedBanner");
                });

            modelBuilder.Entity("SportsHubDAL.Entities.Privacy", b =>
                {
                    b.HasOne("SportsHubDAL.Entities.Language", "Language")
                        .WithMany("Privacies")
                        .HasForeignKey("LanguageId");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("SportsHubDAL.Entities.SurveyLocalization", b =>
                {
                    b.HasOne("SportsHubDAL.Entities.Language", "Language")
                        .WithMany("SurveyLocalizations")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SportsHubDAL.Entities.Survey", "Survey")
                        .WithMany("SurveyLocalizations")
                        .HasForeignKey("SurveyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("Survey");
                });

            modelBuilder.Entity("SportsHubDAL.Entities.SurveyOption", b =>
                {
                    b.HasOne("SportsHubDAL.Entities.Survey", "Survey")
                        .WithMany("SurveyOptions")
                        .HasForeignKey("SurveyId");

                    b.Navigation("Survey");
                });

            modelBuilder.Entity("SportsHubDAL.Entities.SurveyOptionLocalization", b =>
                {
                    b.HasOne("SportsHubDAL.Entities.Language", "Language")
                        .WithMany("SurveyOptionLocalizations")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SportsHubDAL.Entities.SurveyOption", "SurveyOption")
                        .WithMany("SurveyOptionLocalizations")
                        .HasForeignKey("SurveyOptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("SurveyOption");
                });

            modelBuilder.Entity("SportsHubDAL.Entities.Team", b =>
                {
                    b.HasOne("SportsHubDAL.Entities.Conference", "Conference")
                        .WithMany("Teams")
                        .HasForeignKey("ConferenceId");

                    b.HasOne("SportsHubDAL.Entities.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId");

                    b.HasOne("SportsHubDAL.Entities.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");

                    b.Navigation("Conference");

                    b.Navigation("Image");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("SportsHubDAL.Entities.Term", b =>
                {
                    b.HasOne("SportsHubDAL.Entities.Language", "Language")
                        .WithMany("Terms")
                        .HasForeignKey("LanguageId");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("SportsHubDAL.Entities.Banner", b =>
                {
                    b.Navigation("BannerLocalizations");
                });

            modelBuilder.Entity("SportsHubDAL.Entities.Category", b =>
                {
                    b.Navigation("Conferences");
                });

            modelBuilder.Entity("SportsHubDAL.Entities.CompanyInfoSection", b =>
                {
                    b.Navigation("AboutSportHubTranslations");

                    b.Navigation("ContactUsTranslations");

                    b.Navigation("DeletableInfoSectionsTranslations");
                });

            modelBuilder.Entity("SportsHubDAL.Entities.Conference", b =>
                {
                    b.Navigation("Teams");
                });

            modelBuilder.Entity("SportsHubDAL.Entities.ContributorsSection", b =>
                {
                    b.Navigation("ContributorsSectionsTranslations");
                });

            modelBuilder.Entity("SportsHubDAL.Entities.Language", b =>
                {
                    b.Navigation("AboutSportHubTranslations");

                    b.Navigation("BannerLocalizations");

                    b.Navigation("CompanyInfoTranslations");

                    b.Navigation("ContactUsTranslations");

                    b.Navigation("ContributorsSectionsTranslations");

                    b.Navigation("ContributorsTranslations");

                    b.Navigation("DeletableInfoSectionsTranslations");

                    b.Navigation("NewsLetterTranslations");

                    b.Navigation("PredefinedBannerLocalization");

                    b.Navigation("Privacies");

                    b.Navigation("SurveyLocalizations");

                    b.Navigation("SurveyOptionLocalizations");

                    b.Navigation("Terms");
                });

            modelBuilder.Entity("SportsHubDAL.Entities.PredefinedBanner", b =>
                {
                    b.Navigation("PredefinedBannerLocalization");
                });

            modelBuilder.Entity("SportsHubDAL.Entities.Survey", b =>
                {
                    b.Navigation("SurveyLocalizations");

                    b.Navigation("SurveyOptions");
                });

            modelBuilder.Entity("SportsHubDAL.Entities.SurveyOption", b =>
                {
                    b.Navigation("SurveyOptionLocalizations");
                });
#pragma warning restore 612, 618
        }
    }
}
